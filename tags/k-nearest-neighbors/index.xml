<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>k-nearest neighbors on Digital Forays</title><link>https://kspicer80.github.io/tags/k-nearest-neighbors/</link><description>Recent content in k-nearest neighbors on Digital Forays</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Fri, 01 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://kspicer80.github.io/tags/k-nearest-neighbors/index.xml" rel="self" type="application/rss+xml"/><item><title>Binary Text Classification Fun! ... with some Literary Texts by Willa Cather and Sarah Orne Jewett</title><link>https://kspicer80.github.io/posts/2022-04-10-classification-fun-with-some-literary-texts_10/</link><pubDate>Fri, 01 Apr 2022 00:00:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2022-04-10-classification-fun-with-some-literary-texts_10/</guid><description>In my DH journey, the work of Dr. William Mattingly has been something of a constant companion and guide.
His video laying out the steps for a &amp;ldquo;Binary Data Classification&amp;rdquo; was clear and quite clarifying for me in all kinds of ways. The classifier&amp;rsquo;s job in this video was to see if it could tell the difference between the work of Oscar Wilde and Dan Brown. What if we tried a different pair of authors/texts?</description></item><item><title>Viral Tweet Classification Project</title><link>https://kspicer80.github.io/posts/2022-03-26-twitter-viral-tweet-classification-project_08/</link><pubDate>Sat, 26 Mar 2022 00:00:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2022-03-26-twitter-viral-tweet-classification-project_08/</guid><description>I had a bit of fun recently working on a machine learning classification project using some Twitter data (said project coming through Codecademy). The goal was to see if we could write some code to properly detect whether or not a tweet was viral (using the K-Nearest Neighbors algorithm). I also played around with a logistic regression model as well. All the code for the following is available in this repo.</description></item></channel></rss>