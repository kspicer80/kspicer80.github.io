<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Codecademy on Digital Forays</title><link>https://kspicer80.github.io/tags/codecademy/</link><description>Recent content in Codecademy on Digital Forays</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Tue, 25 Apr 2023 00:02:00 +0000</lastBuildDate><atom:link href="https://kspicer80.github.io/tags/codecademy/index.xml" rel="self" type="application/rss+xml"/><item><title>Advanced Logging in Python</title><link>https://kspicer80.github.io/posts/2023-04-25-advanced-logging-in-python/</link><pubDate>Tue, 25 Apr 2023 00:02:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2023-04-25-advanced-logging-in-python/</guid><description>Over this past weekend I was working my through Codecademy&amp;rsquo;s &amp;ldquo;Advanced Python 3&amp;rdquo; course, which has an initial module that introduces students to Python&amp;rsquo;s logging library. There was a wonderful little project—&amp;ldquo;ATM Logging&amp;rdquo;—that was quite fun to tackle, especially as it made really clear why one might want to use logging instead of filling one&amp;rsquo;s code with a bunch of print() statements. The setup was that we had a pretty simple little &amp;ldquo;ATM&amp;rdquo; program/script that would allow us to deposit and withdraw money—while providing some error messages to keep track of things throughout the whole process.</description></item><item><title>Predictive Modeling with the 'OK Cupid' Dataset</title><link>https://kspicer80.github.io/posts/2023-04-15-machine-learning-with-ok-cupid-dataset/</link><pubDate>Sat, 15 Apr 2023 00:01:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2023-04-15-machine-learning-with-ok-cupid-dataset/</guid><description>The final project for Codecademy&amp;rsquo;s &amp;ldquo;Building a Machine Learning Model with Python&amp;rdquo; Skill Path asks students to do a little work with the &amp;ldquo;OK Cupid&amp;rdquo; dataset—the project is humorously, punningly titled: &amp;ldquo;Date-A-Scientist.&amp;rdquo; Students were tasked with trying to build some models to make predictions on this dataset. A Jupyter notebook with all the code and results follows here:</description></item><item><title>Linear Regression in the Humanities(?!?!) ... not quite</title><link>https://kspicer80.github.io/posts/2022-06-01-linear-regression-in-the-humanities_18/</link><pubDate>Wed, 01 Jun 2022 00:01:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2022-06-01-linear-regression-in-the-humanities_18/</guid><description>Working my way through some of the new lessons from Codecademy&amp;rsquo;s new &amp;ldquo;Data Scientist: Natural Language Processing Specialist&amp;rdquo; path, I was returning to some of the lessons on linear regression usage in machine learning contexts. I also happened across a really fantastic post from the &amp;ldquo;LaTeX Ninja&amp;rdquo; on &amp;ldquo;Machine Learning for the Humanities: A Very Short Introduction&amp;rdquo;—I hadn&amp;rsquo;t yet come across this site yet and find it full of all kinds of fantastic little nuggets.</description></item><item><title>Viral Tweet Classification Project</title><link>https://kspicer80.github.io/posts/2022-03-26-twitter-viral-tweet-classification-project_08/</link><pubDate>Sat, 26 Mar 2022 00:00:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2022-03-26-twitter-viral-tweet-classification-project_08/</guid><description>I had a bit of fun recently working on a machine learning classification project using some Twitter data (said project coming through Codecademy). The goal was to see if we could write some code to properly detect whether or not a tweet was viral (using the K-Nearest Neighbors algorithm). I also played around with a logistic regression model as well. All the code for the following is available in this repo.</description></item><item><title>Letting Excel Go and Departmental Assessment Reports</title><link>https://kspicer80.github.io/posts/2022-01-18-letting-excel-go_06/</link><pubDate>Tue, 18 Jan 2022 08:19:43 -0600</pubDate><guid>https://kspicer80.github.io/posts/2022-01-18-letting-excel-go_06/</guid><description>For those that work in disciplines that are much closer to STEM fields than me over here in philosophy and literature, I have no doubt that most of what I want to showcase here will no doubt be the height of banality. As Department Chair, a good deal of the Assessment Reports each year fall to me. Historically, for the past couple of years I have been more than content to simply just keep all of the scores on our assessed outcomes in one gigantic Excel spreadsheet.</description></item></channel></rss>