<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>matplotlib on Digital Forays</title><link>https://kspicer80.github.io/tags/matplotlib/</link><description>Recent content in matplotlib on Digital Forays</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Thu, 19 Jun 2025 17:50:00 +0000</lastBuildDate><atom:link href="https://kspicer80.github.io/tags/matplotlib/index.xml" rel="self" type="application/rss+xml"/><item><title>As Promised---Skubal and Skenes Career K Projections</title><link>https://kspicer80.github.io/posts/2025-06-19-skubal_vs_skenes/</link><pubDate>Thu, 19 Jun 2025 17:50:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2025-06-19-skubal_vs_skenes/</guid><description>As in my previous post I promised to look at both Skenes and Skubal. I was also thinking about my initial [MLB post](where we were looking at Skenes and Kershaw). I can imagine a reader wondering how we determined what an &amp;ldquo;optimistic&amp;rdquo; versus &amp;ldquo;pessimistic&amp;rdquo; trajectory for Skenes ultimately is &amp;hellip; I figured I would answer that in my writeup here of our Skenes vs. Skubal&amp;rsquo;s career K potential/trajectory. So let&amp;rsquo;s go producing a similar side-by-side comparison for these two but with the initial steps not being left out/omitted.</description></item><item><title>More MLB Visualizations ... For a Larf</title><link>https://kspicer80.github.io/posts/2025-06-17-skubal-k-projections/</link><pubDate>Tue, 17 Jun 2025 13:50:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2025-06-17-skubal-k-projections/</guid><description>With Tarik Skubal on the mound tomorrow&amp;mdash;Wednesday, June 18&amp;mdash;for the Tigers against Pittsburgh, considered by many to be the best pitcher in baseball, I thought we could take a look at Skubal&amp;rsquo;s projections real quick as a larf. I figured we could use the code from our previous blog post looking at Paul Skenes and Clatyton Kershaw and see what we can see; just a couple changes to the player we&amp;rsquo;re looking at and we’re good to go:</description></item><item><title>We've Done Some NBA and WNBA Data Analysis ... How About Some MLB?</title><link>https://kspicer80.github.io/posts/2025-06-15-skenes-vs-kershaw-career-strikeouts/</link><pubDate>Sun, 15 Jun 2025 23:50:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2025-06-15-skenes-vs-kershaw-career-strikeouts/</guid><description>Watching the LA Dodgers and SF Giants game yesterday&amp;mdash;Saturday, June 14, 2025&amp;mdash;the commentators were talking about Clayton Kershaw&amp;rsquo;s closing in a on 3000 career strikeouts. Having earlier watched Pittsburgh Pirates ace Paul Skenes go, I wonder if we could visualize the possibilities of the latter eventually clearing that line.
We can project Paul Skenes&amp;rsquo;s trajectory based on some estimates&amp;mdash;whether we&amp;rsquo;re really optimistic in certain K numbers per game or pessimistic&amp;mdash;and we get something like this:</description></item><item><title>WNBA Historical Stats</title><link>https://kspicer80.github.io/posts/2025-05-24-wnba-historical-stats/</link><pubDate>Wed, 04 Jun 2025 12:00:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2025-05-24-wnba-historical-stats/</guid><description>Yay! The WNBA season is upon us and already started! Since I had recently done some analysis on the NBA Playoffs&amp;mdash;I figured I would goof around and play with the WNBA a little bit. In service of that, let&amp;rsquo;s dive in.
So, as always, we start with data gathering. I tried using the fabulous nba_api to grab data, but for years closer to the creation of the league (1997), things seemed a little spotty to me.</description></item><item><title>NBA Playoff Blowouts</title><link>https://kspicer80.github.io/posts/2025-05-24-nba-playoff-blowouts/</link><pubDate>Sat, 24 May 2025 13:01:57 +0000</pubDate><guid>https://kspicer80.github.io/posts/2025-05-24-nba-playoff-blowouts/</guid><description>Watching the 2025 NBA Playoffs has been a bit strange: huge blowouts (sometimes, often, unexpected) follow by razor-tight contests that go down to the very last possession or even into overtime.
After the Denver Nuggets&amp;rsquo; exit from the playoffs at the hands of the OKC Thunder, Aaron Gordon of the Nuggets has a rather intriguing post-game press conference where he himself mentioned the &amp;ldquo;blowouts&amp;rdquo; thing (thus making it not something just in my head, I suppose).</description></item><item><title>Total *non sequitur*: Tracking the Price of Silver</title><link>https://kspicer80.github.io/posts/2024-08-30-tracking-silver-prices/</link><pubDate>Sun, 18 Aug 2024 00:01:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2024-08-30-tracking-silver-prices/</guid><description>Silver Price Tracker So, my father has some vintage Silver pieces from 1973 and 1974 produced by the Franklin Mint with all kinds of different national banks on each one. We&amp;rsquo;ve been trying to figure out how to unload them&amp;mdash;either to collectors or to folks that will simply melt them down for the silver alone. I figured I&amp;rsquo;d do a little coding.
The first is a plot over the last couple of months of Silver prices:</description></item><item><title>Digital Rhetoric and Predictive Machine Learning Models on Twitter Data</title><link>https://kspicer80.github.io/posts/2023-04-25-measuring-twitter-engagement-and-digital-rhetoric/</link><pubDate>Mon, 25 Sep 2023 00:01:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2023-04-25-measuring-twitter-engagement-and-digital-rhetoric/</guid><description>In my ENGE 515: Digital Rhetoric graduate-level course currently running (full list of courses is available through the USF REAL program, housed within the College of Education), we have been getting our feet wet in this field of rhetoric focused on the realm/world of &amp;ldquo;the digital&amp;rdquo; (I do notice too now—somehow it had slipped my mind—that I wrote a little bit already about how this course went last summer). This past week (Week 6), we had a read of some somewhat contemporary work in this field, namely:</description></item><item><title>Predictive Modeling with the 'OK Cupid' Dataset</title><link>https://kspicer80.github.io/posts/2023-04-15-machine-learning-with-ok-cupid-dataset/</link><pubDate>Sat, 15 Apr 2023 00:01:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2023-04-15-machine-learning-with-ok-cupid-dataset/</guid><description>The final project for Codecademy&amp;rsquo;s &amp;ldquo;Building a Machine Learning Model with Python&amp;rdquo; Skill Path asks students to do a little work with the &amp;ldquo;OK Cupid&amp;rdquo; dataset—the project is humorously, punningly titled: &amp;ldquo;Date-A-Scientist.&amp;rdquo; Students were tasked with trying to build some models to make predictions on this dataset. A Jupyter notebook with all the code and results follows here:</description></item><item><title>Hemingway (continued)</title><link>https://kspicer80.github.io/posts/2023-04-15-fitzgerald-hemingway-continued/</link><pubDate>Mon, 10 Apr 2023 00:01:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2023-04-15-fitzgerald-hemingway-continued/</guid><description>In my last post, I shared some really simple text classification work on Hemingway, Fitzgerald, and Steinbeck. It was only after posting it that I noticed that Justin Rice beat me to the punch with his post &amp;ldquo;What Makes Hemingway Hemingway?&amp;rdquo; over on &amp;ldquo;The LitCharts Blog&amp;rdquo;. What was terribly curious to me was that Rice showcases some of the key characteristics that one thinks &amp;ldquo;makes Hemingway Hemingway&amp;rdquo;—sentence length, word length, lexical richness, dialogue proportion, parts of speech, characteristic words, and much more.</description></item><item><title>Fitzgerald ... Hemingway ... Steinbeck</title><link>https://kspicer80.github.io/posts/2023-04-07-fitzgerald-hemingway/</link><pubDate>Fri, 07 Apr 2023 00:01:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2023-04-07-fitzgerald-hemingway/</guid><description>Lately I have been spending a fair amount of time working on my portfolio for the required &amp;ldquo;Post_Tenure Review&amp;rdquo; at my current institution. I spent quite a bit of time canvassing a great deal of the DH/computer programming learning I have acquired over the last couple of years. I gave a somewhat interesting test project version of some more stylometry/text classification work,1 focusing quite directly on some work another (former) student of mine, William Mastin, and I have been doing on one of his most favorite authors, Ernest Hemingway.</description></item><item><title>Comparing Stylistic Tendencies of Recent United States Supreme Court Justices (Gorsuch, Kavanaugh, and Barrett)</title><link>https://kspicer80.github.io/posts/2022-07-11-pca-analysis-of-recent-new-justices_21/</link><pubDate>Mon, 11 Jul 2022 00:01:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2022-07-11-pca-analysis-of-recent-new-justices_21/</guid><description>General Introduction (All of the code for this post is available in this repo here.)
Continuing off of the last two posts (here and here), I thought we might continue seeing what we could do with our Supreme Court Opinions dataset(s)—I was also fascinated and inspired by a nice little article on Wikipedia about the &amp;ldquo;Ideological leanings of United States Supreme Court justices,&amp;rdquo; which has some really nice images. I thought one might do a little exploratory work with the opinions of some of the more recently appointed Justices: in particular I wanted to look at the work done so far by Justices Gorsuch, Kavanaugh, and Barrett; perhaps a little PCA work to see if we could work through any potential stylistic similarities between their opinions so far.</description></item><item><title>Topic Modeling the United States Supreme Court Utilizing the Top2Vec Library</title><link>https://kspicer80.github.io/posts/2022-07-07-top2vec-topic-modeling_20/</link><pubDate>Thu, 07 Jul 2022 00:13:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2022-07-07-top2vec-topic-modeling_20/</guid><description>Here in this post I&amp;rsquo;d like to continue working on the same project used in the previous post (here) while trying out the Top2Vec library). As is so often the case, I came across this library via Dr. William Mattingly&amp;rsquo;s YoutTube channel, who devoted two different videos to using this library (here and here). So let&amp;rsquo;s jump in and see what we can do with this library.
This time around we&amp;rsquo;re using a slightly different dataset that comes Kaggle—it contains all of the USSC opinions from 1970 on.</description></item><item><title>Topic Modeling the United States Supreme Court Surrounding Abortion</title><link>https://kspicer80.github.io/posts/2022-07-06-topic-modeling-the-ussc_19/</link><pubDate>Wed, 06 Jul 2022 00:01:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2022-07-06-topic-modeling-the-ussc_19/</guid><description>General Background (All code from this section is available in this repository here.)
Friday of last week, June 24th, 2022, was a profoundly dark day for a great many of us in the United States. Feeling somewhat helpless as the Supreme Court published the final draft of Dobbs v. Jackson Women&amp;rsquo;s Health Organization, I couldn&amp;rsquo;t help but fall back on old patterns. Not really knowing what else to do—I had a student with whom I had recently read the leaked original draft posted by Politico—I couldn&amp;rsquo;t help but say to her when the opinion came down that I didn&amp;rsquo;t know what else to do other than to get to reading.</description></item><item><title>Linear Regression in the Humanities(?!?!) ... not quite</title><link>https://kspicer80.github.io/posts/2022-06-01-linear-regression-in-the-humanities_18/</link><pubDate>Wed, 01 Jun 2022 00:01:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2022-06-01-linear-regression-in-the-humanities_18/</guid><description>Working my way through some of the new lessons from Codecademy&amp;rsquo;s new &amp;ldquo;Data Scientist: Natural Language Processing Specialist&amp;rdquo; path, I was returning to some of the lessons on linear regression usage in machine learning contexts. I also happened across a really fantastic post from the &amp;ldquo;LaTeX Ninja&amp;rdquo; on &amp;ldquo;Machine Learning for the Humanities: A Very Short Introduction&amp;rdquo;—I hadn&amp;rsquo;t yet come across this site yet and find it full of all kinds of fantastic little nuggets.</description></item><item><title>More _The Turn of the Screw_ Data Analysis</title><link>https://kspicer80.github.io/posts/2022-05-27-henry-james-turn-of-the-screw-data-analysis_16/</link><pubDate>Fri, 27 May 2022 11:49:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2022-05-27-henry-james-turn-of-the-screw-data-analysis_16/</guid><description>I know I mentioned in an earlier post—and here—that I&amp;rsquo;ve been doing a bunch of work with Henry James&amp;rsquo;s canonical The Turn of the Screw. I thought I would post a little bit more here of what I&amp;rsquo;ve been up to as of late with this. A student of mine was fascinated by the use of the words &amp;ldquo;prodigious&amp;rdquo; and &amp;ldquo;portentous&amp;rdquo; in the Governess&amp;rsquo;s narrative in Turn. She said she noticed it frequently.</description></item><item><title>Using Vector Space Models with Shakespeare's Plays</title><link>https://kspicer80.github.io/posts/2022-03-29-vector-space-models-and-shakespeare_09/</link><pubDate>Mon, 28 Mar 2022 00:00:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2022-03-29-vector-space-models-and-shakespeare_09/</guid><description>Much of the toe-dipping into this new DH field I&amp;rsquo;ve been doing as of late has centered around learning many of the kinds of projects carried out and then turning the methods within those projects onto mew artifacts. A while back I worked my way through Folgert Karsdorp, Mike Kestemont, and Allen Riddell&amp;rsquo;s Humanities Data Analysis: Case Studies with Python. I found a great deal of it thought-provoking and fascinating—especially the chapters devoted to modeling texts with vector spaces and the later chapter on stylometry, which focused on some texts by Hildegard of Bingen and Bernard of Clairvaux.</description></item><item><title>Viral Tweet Classification Project</title><link>https://kspicer80.github.io/posts/2022-03-26-twitter-viral-tweet-classification-project_08/</link><pubDate>Sat, 26 Mar 2022 00:00:00 +0000</pubDate><guid>https://kspicer80.github.io/posts/2022-03-26-twitter-viral-tweet-classification-project_08/</guid><description>I had a bit of fun recently working on a machine learning classification project using some Twitter data (said project coming through Codecademy). The goal was to see if we could write some code to properly detect whether or not a tweet was viral (using the K-Nearest Neighbors algorithm). I also played around with a logistic regression model as well. All the code for the following is available in this repo.</description></item></channel></rss>